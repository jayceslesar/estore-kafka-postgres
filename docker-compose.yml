version: '3.8'

services:
  db:
    image: postgres:15.2
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: purchases
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka-setup:
    image: confluentinc/cp-kafka:latest
    command:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to come online..."
        sleep 20 # Add a delay before checking Kafka status
        cub kafka-ready -b kafka:9092 1 20
        echo "Creating Kafka topics..."
        kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic purchases
    depends_on:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    depends_on:
      - db
      - kafka
    networks:
      - backend

networks:
  backend:
    driver: bridge
